in computer science an array data structure or simply an array is data structure consisting of collection of elements values or variables each identified by at least one array index or key an array is stored such that the position of each element can be computed from its index tuple by mathematical formula the simplest type of data structure is linear array also called one dimensional array for example an array of bit byte integer variables with indices through may be stored as words at memory addresses in hexadecimal so that the element with index has the address the memory address of the first element of an array is called first address foundation address or base address because the mathematical concept of matrix can be represented as two dimensional grid two dimensional arrays are also sometimes called matrices in some cases the term vector is used in computing to refer to an array although tuples rather than vectors are the more mathematically correct equivalent tables are often implemented in the form of arrays especially lookup tables the word table is sometimes used as synonym of array arrays are among the oldest and most important data structures and are used by almost every program they are also used to implement many other data structures such as lists and strings they effectively exploit the addressing logic of computers in most modern computers and many external storage devices the memory is one dimensional array of words whose indices are their addresses processors especially vector processors are often optimized for array operations arrays are useful mostly because the element indices can be computed at run time among other things this feature allows single iterative statement to process arbitrarily many elements of an array for that reason the elements of an array data structure are required to have the same size and should use the same data representation the set of valid index tuples and the addresses of the elements and hence the element addressing formula are usually but not always fixed while the array is in use the term array is often used to mean array data type kind of data type provided by most high level programming languages that consists of collection of values or variables that can be selected by one or more indices computed at run time array types are often implemented by array structures however in some languages they may be implemented by hash tables linked lists search trees or other data structures the term is also used especially in the description of algorithms to mean associative array or abstract array theoretical computer science model an abstract data type or adt intended to capture the essential properties of arrays history the first digital computers used machine language programming to set up and access array structures for data tables vector and matrix computations and for many other purposes john von neumann wrote the first array sorting program merge sort in during the building of the first stored program computer array indexing was originally done by self modifying code and later using index registers and indirect addressing some mainframes designed in the such as the burroughs and its successors used memory segmentation to perform index bounds checking in hardware assembly languages generally have no special support for arrays other than what the machine itself provides the earliest high level programming languages including fortran lisp cobol and algol had support for multi dimensional arrays and so has in class templates exist for multi dimensional arrays whose dimension is fixed at runtime as well as for runtime flexible arrays applications arrays are used to implement mathematical vectors and matrices as well as other kinds of rectangular tables many databases small and large consist of or include one dimensional arrays whose elements are records arrays are used to implement other data structures such as lists heaps hash tables deques queues stacks strings and vlists array based implementations of other data structures are frequently simple and space efficient implicit data structures requiring little space overhead but may have poor space complexity particularly when modified compared to tree based data structures compare sorted array to search tree one or more large arrays are sometimes used to emulate in program dynamic memory allocation particularly memory pool allocation historically this has sometimes been the only way to allocate dynamic memory portably arrays can be used to determine partial or complete control flow in programs as compact alternative to otherwise repetitive multiple if statements they are known in this context as control tables and are used in conjunction with purpose built interpreter whose control flow is altered according to values contained in the array the array may contain subroutine pointers or relative subroutine numbers that can be acted upon by switch statements that direct the path of the execution element identifier and addressing formulas when data objects are stored in an array individual objects are selected by an index that is usually non negative scalar integer indexes are also called subscripts an index maps the array value to stored object there are three ways in which the elements of an array can be indexed zero based indexing the first element of the array is indexed by subscript of one based indexing the first element of the array is indexed by subscript of based indexing the base index of an array can be freely chosen usually programming languages allowing based indexing also allow negative index values and other scalar data types like enumerations or characters may be used as an array index using zero based indexing is the design choice of many influential programming languages including java and lisp this leads to simpler implementation where the subscript refers to an offset from the starting position of an array so the first element has an offset of zero arrays can have multiple dimensions thus it is not uncommon to access an array using multiple indices for example two dimensional array with three rows and four columns might provide access to the element