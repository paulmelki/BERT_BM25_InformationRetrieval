this image illustrates part of the mandelbrot set fractal simply storing the bit color of each pixel in this image would require million bytes but small computer program can reproduce these million bytes using the definition of the mandelbrot set and the coordinates of the corners of the image thus the kolmogorov complexity of the raw file encoding this bitmap is much less than million bytes in any pragmatic model of computation in algorithmic information theory subfield of computer science and mathematics the kolmogorov complexity of an object such as piece of text is the length of shortest computer program in predetermined programming language that produces the object as output it is measure of the computational resources needed to specify the object and is also known as algorithmic complexity solomonoff kolmogorov chaitin complexity program size complexity descriptive complexity or algorithmic entropy it is named after andrey kolmogorov who first published on the subject in the notion of kolmogorov complexity can be used to state and prove impossibility results akin to cantor diagonal argument g√∂del incompleteness theorem and turing halting problem in particular no program computing lower bound for each text kolmogorov complexity can return value essentially larger than own length see section hence no single program can compute the exact kolmogorov complexity for infinitely many texts definition consider the following two strings of lowercase letters and digits and cv rx umgw the first string has short english language description namely write ab times which consists of characters the second one has no obvious simple description using the same character set other than writing down the string itself write cv rx umgw which has characters hence the operation of writing the first string can be said to have less complexity than writing the second more formally the complexity of string is the length of the shortest possible description of the string in some fixed universal description language the sensitivity of complexity relative to the choice of description language is discussed below it can be shown that the kolmogorov complexity of any string cannot be more than few bytes larger than the length of the string itself strings like the abab example above whose kolmogorov complexity is small relative to the string size are not considered to be complex the kolmogorov complexity can be defined for any mathematical object but for simplicity the scope of this article is restricted to strings we must first specify description language for strings such description language can be based on any computer programming language such as lisp pascal or java if is program which outputs string then is description of the length of the description is just the length of as character string multiplied by the number of bits in character for ascii we could alternatively choose an encoding for turing machines where an encoding is function which associates to each turing machine bitstring if is turing machine which on input outputs string then the concatenated string is description of for theoretical analysis this approach is more suited for constructing detailed formal proofs and is generally preferred in the research literature in this article an informal approach is discussed any string has at least one description for example the second string above is output by the program function generatestring return cv rx umgw whereas the first string is output by the much shorter pseudo code function generatestring return ab if description of string is of minimal length using the fewest bits it is called minimal description of and the length of the number of bits in the minimal description is the kolmogorov complexity of written symbolically the length of the shortest description will depend on the choice of description language but the effect of changing languages is bounded result called the invariance theorem invariance theorem informal treatment there are some description languages which are optimal in the following sense given any description of an object in description language said description may be used in the optimal description language with constant overhead the constant depends only on the languages involved not on the description of the object nor the object being described here is an example of an optimal description language description will have two parts the first part describes another description language the second part is description of the object in that language in more technical terms the first part of description is computer program with the second part being the input to that computer program which produces the object as output the invariance theorem follows given any description language the optimal description language is at least as efficient as with some constant overhead proof any description in can be converted into description in the optimal language by first describing as computer program part and then using the original description as input to that program part the total length of this new description is approximately the length of is constant that doesn depend on so there is at most constant overhead regardless of the object described therefore the optimal language is universal up to this additive constant more formal treatment theorem if and are the complexity functions relative to turing complete description languages and then there is constant which depends only on the languages and chosen such that proof by symmetry it suffices to prove that there is some constant such that for all strings now suppose there is program in the language which acts as an interpreter for function string where is program in the interpreter is characterized by the following property running on input returns the result of running thus if is program in which is minimal description of then returns the string the length of this description of is the sum of the length of the program which we can take to be the constant the length of which by definition is this proves the desired upper bound history and context algorithmic information theory is the area of computer science that studies kolmogorov complexity and other complexity measures on strings or other data