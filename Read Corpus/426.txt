apl named after the book programming language is programming language developed in the by kenneth iverson its central datatype is the array it uses large range of special graphic symbols to represent most functions and operators leading to very concise code it has been an important influence on the development of concept modeling spreadsheets functional programming and computer math packages it has also inspired several other programming languages history mathematical notation mathematical notation for manipulating arrays was developed by kenneth iverson starting in at harvard university in he began work for ibm where he developed this notation with adin falkoff and published it in his book programming language in the preface states its premise this notation was used inside ibm for short research reports on computer systems such as the burroughs and its stack mechanism when stack machines versus register machines were being evaluated by ibm for upcoming computers iverson also used his notation in draft of the chapter programming language written for book he was writing with fred brooks automatic data processing which would be published in in iverson received the turing award for his work on apl development into computer programming language as early as the first attempt to use the notation to describe complete computer system happened after falkoff discussed with william carter his work to standardize the instruction set for the machines that later became the ibm system family in herbert hellerman working at the ibm systems research institute implemented part of the notation on an ibm computer and it was used by students in special high school course on calculating transcendental functions by series summation students tested their code in hellerman lab this implementation of part of the notation was called personalized array translator pat in falkoff iverson and edward sussenguth jr all working at ibm used the notation for formal description of the ibm system series machine architecture and functionality which resulted in paper published in ibm systems journal in after this was published the team turned their attention to an implementation of the notation on computer system one of the motivations for this focus of implementation was the interest of john lawrence who had new duties with science research associates an educational company bought by ibm in lawrence asked iverson and his group to help use the language as tool to develop and use computers in education after lawrence breed and philip abrams of stanford university joined the team at ibm research they continued their prior work on an implementation programmed in fortran iv for part of the notation which had been done for the ibm computer running on the ibsys operating system this work was finished in late and later named ivsys for iverson system the basis of this implementation was described in detail by abrams in stanford university technical report an interpreter for iverson notation in the academic aspect of this was formally supervised by niklaus wirth like hellerman pat system earlier this implementation did not include the apl character set but used special english reserved words for functions and operators the system was later adapted for time sharing system and by november it had been reprogrammed for the ibm system model computer running in time sharing mode and was used internally at ibm hardware ibm typeballs one ocr with clip coin for scale programmer view of the ibm keyboard layout with the apl typing element print head inserted key development in the ability to use apl effectively before the wide use of cathode ray tube crt terminals was the development of special ibm selectric typewriter interchangeable typing element with all the special apl characters on it this was used on paper printing terminal workstations using the selectric typewriter and typing element mechanism such as the ibm and ibm terminal keycaps could be placed over the normal keys to show which apl characters would be entered and typed when that key was struck for the first time programmer could type in and see proper apl characters as used in iverson notation and not be forced to use awkward english keyword representations of them falkoff and iverson had the special apl selectric typing elements and designed in late although no apl computer system was available to use them iverson cited falkoff as the inspiration for the idea of using an ibm selectric typing element for the apl character set many apl symbols even with the apl characters on the selectric typing element still had to be typed in by over striking two extant element characters an example is the grade up character which had to be made from delta shift and sheffer stroke shift this was necessary because the apl character set was much larger than the characters allowed on the typing element even when letters were restricted to upper case capitals commercial availability the first apl interactive login and creation of an apl workspace was in by larry breed using an ibm terminal at the ibm mohansic labs near thomas watson research center the home of apl in yorktown heights new york ibm was chiefly responsible for introducing apl to the marketplace apl was first available in for the ibm as apl it would run in as little as bit words of memory and used dedicated megabyte hard disk apl gained its foothold on mainframe timesharing systems from the late through the early in part because it would support multiple users on lower specification systems that had no dynamic address translation hardware additional improvements in performance for selected ibm system mainframe systems included the apl assist microcode in which some support for apl execution was included in the processor firmware as distinct from being implemented entirely by higher level software somewhat later as suitably performing hardware was finally growing available in the mid to late many users migrated their applications to the personal computer environment early ibm apl interpreters for ibm and ibm hardware implemented their own multi user management instead of relying on the host services thus they were their