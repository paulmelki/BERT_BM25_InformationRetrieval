awk awk is domain specific language designed for text processing and typically used as data extraction and reporting tool like sed and grep it filter and is standard feature of most unix like operating systems the awk language is data driven scripting language consisting of set of actions to be taken against streams of textual data either run directly on files or used as part of pipeline for purposes of extracting or transforming text such as producing formatted reports the language extensively uses the string datatype associative arrays that is arrays indexed by key strings and regular expressions while awk has limited intended application domain and was especially designed to support one liner programs the language is turing complete and even the early bell labs users of awk often wrote well structured large awk programs awk was created at bell labs in the and its name is derived from the surnames of its authors alfred aho peter weinberger and brian kernighan the acronym is pronounced the same as the bird auk which is on the cover of the awk programming language when written in all lowercase letters as awk it refers to the unix or plan program that runs scripts written in the awk programming language history awk was initially developed in by alfred aho author of egrep peter weinberger who worked on tiny relational databases and brian kernighan it takes its name from their respective initials according to kernighan one of the goals of awk was to have tool that would easily manipulate both numbers and strings awk was also inspired by marc rochkind programming language that was used to search for patterns in input data and was implemented using yacc as one of the early tools to appear in version unix awk added computational features to unix pipeline besides the bourne shell the only scripting language available in standard unix environment it is one of the mandatory utilities of the single unix specification and is required by the linux standard base specification awk was significantly revised and expanded in resulting in the gnu awk implementation written by paul rubin jay fenlason and richard stallman released in gnu awk may be the most widely deployed version because it is included with gnu based linux packages gnu awk has been maintained solely by arnold robbins since brian kernighan nawk new awk source was first released in unpublicized and publicly since the late many bsd systems use it to avoid the gpl license awk was preceded by sed both were designed for text processing they share the line oriented data driven paradigm and are particularly suited to writing one liner programs due to the implicit main loop and current line variables the power and terseness of early awk programs notably the powerful regular expression handling and conciseness due to implicit variables which facilitate one liners together with the limitations of awk at the time were important inspirations for the perl language in the perl became very popular competing with awk in the niche of unix text processing languages structure of awk programs an awk program is series of pattern action pairs written as condition action condition action where condition is typically an expression and action is series of commands the input is split into records where by default records are separated by newline characters so that the input is split into lines the program tests each record against each of the conditions in turn and executes the action for each expression that is true either the condition or the action may be omitted the condition defaults to matching every record the default action is to print the record this is the same pattern action structure as sed in addition to simple awk expression such as foo or foo the condition can be begin or end causing the action to be executed before or after all records have been read or pattern pattern which matches the range of records starting with record that matches pattern up to and including the record that matches pattern before again trying to match against pattern on future lines in addition to normal arithmetic and logical operators awk expressions include the tilde operator which matches regular expression against string as handy syntactic sugar regexp without using the tilde operator matches against the current record this syntax derives from sed which in turn inherited it from the ed editor where is used for searching this syntax of using slashes as delimiters for regular expressions was subsequently adopted by perl and ecmascript and is now common the tilde operator was also adopted by perl commands awk commands are the statements that are substituted for action in the examples above awk commands can include function calls variable assignments calculations or any combination thereof awk contains built in support for many functions many more are provided by the various flavors of awk also some flavors support the inclusion of dynamically linked libraries which can also provide more functions the print command the print command is used to output text the output text is always terminated with predefined string called the output record separator ors whose default value is newline the simplest form of this command is print this displays the contents of the current record in awk records are broken down into fields and these can be displayed separately print displays the first field of the current record print displays the first and third fields of the current record separated by predefined string called the output field separator ofs whose default value is single space character although these fields may bear resemblance to variables the symbol indicates variables in perl they actually refer to the fields of the current record special case refers to the entire record in fact the commands print and print are identical in functionality the print command can also display the results of calculations and or function calls regex_pattern actions to perform in the event the record line matches the above regex_pattern print print foobar print foobar