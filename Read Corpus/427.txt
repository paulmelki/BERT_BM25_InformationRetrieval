algol short for algorithmic language is family of imperative computer programming languages originally developed in algol heavily influenced many other languages and was the standard method for algorithm description used by the association for computing machinery acm in textbooks and academic sources until object oriented languages came around for more than thirty years in the sense that the syntax of most modern languages is algol like it was arguably the most influential of the four high level programming languages among which it was roughly contemporary fortran lisp and cobol it was designed to avoid some of the perceived problems with fortran and eventually gave rise to many other programming languages including pl simula bcpl pascal and algol introduced code blocks and the begin end pairs for delimiting them it was also the first language implementing nested function definitions with lexical scope moreover it was the first programming language which gave detailed attention to formal language definition and through the algol report introduced backus naur form principal formal grammar notation for language design there were three major specifications named after the years they were first published algol originally proposed to be called ial for international algebraic language algol first implemented as algol in mid revised algol introduced new elements including flexible arrays slices parallelism operator identification revised algol is substantially different from algol and was not well received so that in general algol means algol and dialects thereof important implementations the international algebraic language ial renamed algol was highly influential and generally considered the ancestor of most of the modern programming languages the so called algol like languages further algol object code was simple compact and stack based instruction set architecture commonly used in teaching compiler construction and other high order languages of which algol is generally considered the first history algol was developed jointly by committee of european and american computer scientists in meeting in at the swiss federal institute of technology in zurich eth zurich cf algol it specified three different syntaxes reference syntax publication syntax and an implementation syntax the different syntaxes permitted it to use different keyword names and conventions for decimal points commas vs periods for different languages algol was used mostly by research computer scientists in the united states and in europe its use in commercial applications was hindered by the absence of standard input output facilities in its description and the lack of interest in the language by large computer vendors other than burroughs corporation algol did however become the standard for the publication of algorithms and had profound effect on future language development family tree of the algol fortran and cobol programming language dynasty john backus developed the backus normal form method of describing programming languages specifically for algol it was revised and expanded by peter naur for algol and at donald knuth suggestion renamed backus naur form peter naur as editor of the algol bulletin was drawn into the international discussions of the language and was selected to be member of the european language design group in november in this capacity was the editor of the algol report produced as the result of the algol meeting in paris in january the following people attended the meeting in paris from to january friedrich bauer peter naur heinz rutishauser klaus samelson bernard vauquois adriaan van wijngaarden and michael woodger from europe john backus julien green charles katz john mccarthy alan perlis and joseph henry wegstein from the usa alan perlis gave vivid description of the meeting the meetings were exhausting interminable and exhilarating one became aggravated when one good ideas were discarded along with the bad ones of others nevertheless diligence persisted during the entire period the chemistry of the was excellent algol inspired many languages that followed it tony hoare remarked here is language so far ahead of its time that it was not only an improvement on its predecessors but also on nearly all its successors the scheme programming language variant of lisp that adopted the block structure and lexical scope of algol also adopted the wording revised report on the algorithmic language scheme for its standards documents in homage to algol algol and programming language research as peter landin noted algol was the first language to combine seamlessly imperative effects with the call by name lambda calculus perhaps the most elegant formulation of the language is due to john reynolds and it best exhibits its syntactic and semantic purity reynolds idealized algol also made convincing methodologic argument regarding the suitability of local effects in the context of call by name languages in contrast with the global effects used by call by value languages such as ml the conceptual integrity of the language made it one of the main objects of semantic research along with programming computable functions pcf and ml ial implementations timeline to date there have been at least augmentations extensions derivations and sublanguages of algol name year author country description target cpu zmmd implementation friedrich bauer heinz rutishauser klaus samelson hermann bottenbruch germany implementation of algol later zuse was delivered with an algol compiler algol august edsger dijkstra and jaap zonneveld netherlands first implementation of algol electrologica elliott algol hoare uk subject of the turing lecture elliott elliott elliott series jovial jules schwartz usa dod hol prior to ada various see article burroughs algol several variants burroughs corporation with participation by hoare dijkstra and others usa basis of the burroughs and now unisys mcp based computers burroughs large systems and their midrange also case algol case institute of technology usa simula was originally contracted as simulation extension of the case algol univac gogol william mckeeman usa for odin time sharing system pdp regnecentralen algol peter naur j√∏rn jensen denmark implementation of full algol dask at regnecentralen dartmouth algol thomas eugene kurtz et al usa lgp uss algol petrone italy algol translator van der mey and van der poel netherlands staatsbedrijf der posterijen telegrafie en telefonie zebra kidsgrove algol duncan uk english electric company kdf valgol val schorre usa test